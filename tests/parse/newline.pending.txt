assertion failed: `(left == right)`
  left: `"s(:begin,\n  s(:send, nil, :foo),\n  s(:send,\n    s(:send, nil, :foo), :!),\n  s(:send,\n    s(:send, nil, :foo), :~),\n  s(:send,\n    s(:send, nil, :foo), :+@),\n  s(:send,\n    s(:send, nil, :foo), :-@),\n  s(:send,\n    s(:send, nil, :foo), :**,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :*,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :/,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :%,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :+,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :-,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<<,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :&,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :|,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :^,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<=>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :==,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :===,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :!=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :=~,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :!~,\n    s(:send, nil, :bar)),\n  s(:and,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:or,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:irange, nil,\n    s(:send, nil, :bar)),\n  s(:irange,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:erange, nil,\n    s(:send, nil, :bar)),\n  s(:erange,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:if,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar),\n    s(:send, nil, :baz)),\n  s(:lvasgn, :foo,\n    s(:send, nil, :bar)),\n  s(:begin,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:begin,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:array,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:array,\n    s(:send, nil, :foo)),\n  s(:array,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:send, nil, :f,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:send, nil, :f,\n    s(:send, nil, :foo)),\n  s(:send, nil, :f,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :bar),\n  s(:csend,\n    s(:send, nil, :foo), :bar),\n  s(:csend,\n    s(:send, nil, :foo), :bar),\n  s(:const,\n    s(:const, nil, :Foo), :Bar),\n  s(:const, nil, :Foo),\n  s(:const,\n    s(:cbase), :Bar))\n"`,
 right: `"s(:begin,\n  s(:send, nil, :foo),\n  s(:send,\n    s(:send, nil, :foo), :!),\n  s(:send,\n    s(:send, nil, :foo), :~),\n  s(:send,\n    s(:send, nil, :foo), :+@),\n  s(:send,\n    s(:send, nil, :foo), :-@),\n  s(:send,\n    s(:send, nil, :foo), :**,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :*,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :/,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :%,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :+,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :-,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<<,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :&,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :|,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :^,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :>=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :<=>,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :==,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :===,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :!=,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :=~,\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:send, nil, :foo), :!~,\n    s(:send, nil, :bar)),\n  s(:and,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:or,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:irange, nil,\n    s(:send, nil, :bar)),\n  s(:irange,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:erange, nil,\n    s(:send, nil, :bar)),\n  s(:erange,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar)),\n  s(:if,\n    s(:send, nil, :foo),\n    s(:send, nil, :bar),\n    s(:send, nil, :baz)),\n  s(:lvasgn, :foo,\n    s(:send, nil, :bar)),\n  s(:begin,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:begin,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:array,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:array,\n    s(:lvar, :foo)),\n  s(:array,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:send, nil, :f,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:send, nil, :f,\n    s(:lvar, :foo)),\n  s(:send, nil, :f,\n    s(:lvar, :foo),\n    s(:send, nil, :bar)),\n  s(:send,\n    s(:lvar, :foo), :bar),\n  s(:csend,\n    s(:lvar, :foo), :bar),\n  s(:csend,\n    s(:lvar, :foo), :bar),\n  s(:const,\n    s(:const, nil, :Foo), :Bar),\n  s(:const, nil, :Foo),\n  s(:const,\n    s(:cbase), :Bar))\n"`